package demo;

import redis.clients.jedis.Jedis;
import redis.clients.jedis.JedisPool;
import redis.clients.jedis.JedisPoolConfig;
import redis.clients.jedis.ShardedJedis;
import redis.clients.jedis.ShardedJedisPool;

public class RedisClient {
	private Jedis jedis; //非切片客户端连接
	private JedisPool jedisPool; // 非切片连接池
	private ShardedJedis sharedJedis; // 切片客户端连接
	private ShardedJedisPool sharedJedisPool; // 切片连接池
	
	public RedisClient() {
		initialPool();
		initialShardedPool();
	}

	private void initialShardedPool() {
		/ 池基本配置 
        JedisPoolConfig config = new JedisPoolConfig(); 
        config.setMaxActive(20); 
        config.setMaxIdle(5); 
        config.setMaxWait(1000l); 
        config.setTestOnBorrow(false); 
        // slave链接 
        List<JedisShardInfo> shards = new ArrayList<JedisShardInfo>(); 
        shards.add(new JedisShardInfo("127.0.0.1", 6379, "master")); 

        // 构造池 
        shardedJedisPool = new ShardedJedisPool(config, shards); 
	}

	/**
	 * 初始化非切片池
	 */
	private void initialPool() {
		JedisPoolConfig config = new JedisPoolConfig();
		config.setMaxIdle(5);
		config.setMaxWaitMillis(10000);
		config.setTestOnBorrow(false);
		
		jedisPool = new JedisPool(config, "127.0.0.1", 6379);
	}
	
	
	
	
}
